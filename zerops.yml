zerops:
  - setup: backend
    build:
      base:
        - bun@nightly
      os: alpine
      envVariables:
        NODE_ENV: production
        ACCESS_TOKEN: ${RUNTIME_ACCESS_TOKEN}
        DATABASE_URL: ${RUNTIME_DATABASE_URL}
        DIRECT_URL: ${RUNTIME_DIRECT_URL}
        PROJECT_ID: ${RUNTIME_PROJECT_ID}
        PUBLIC_BACKEND_URL: ${RUNTIME_PUBLIC_BACKEND_URL}
        PUBLIC_FRONTEND_URL: ${RUNTIME_PUBLIC_FRONTEND_URL}
        PUBLIC_CONVEX_URL: ${RUNTIME_PUBLIC_CONVEX_URL}
        PUBLIC_LIVEBLOCKS_PUBLIC_API_KEY: ${RUNTIME_PUBLIC_LIVEBLOCKS_PUBLIC_API_KEY}
        SITE_URL: ${RUNTIME_SITE_URL}
      prepareCommands:
        - apk update
        - apk add --no-cache python3 make g++ gcc git curl
        - echo "Upgrading bun to 1.2.2"
        - bun upgrade
      buildCommands:
        - pnpm install --frozen-lockfile --prefer-offline --prod=false
        - bun run postinstall
        - bun run validateEnv
        - pnpm nx build:executable backend --verbose --skip-nx-cache
      deployFiles:
        - apps/backend/dist
        - node_modules/.prisma/client
      cache:
        - node_modules
        - package.json
        - pnpm-lock.yaml
        - pnpm-workspace.yaml

    run:
      base: alpine@latest
      os: alpine
      ports:
        - port: 3001
          httpSupport: true
      prepareCommands:
        - apk update
        - apk add --no-cache ffmpeg python3 curl
        - curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /usr/local/bin/yt-dlp
        - chmod a+rx /usr/local/bin/yt-dlp
      start: apps/backend/dist/main

    deploy:
      readinessCheck:
        httpGet:
          path: /swagger
          port: 3001
